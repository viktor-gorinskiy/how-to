---
version: "3.9"
services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    env_file:
      - ./.env
    command:
      # Tell Traefik to discover containers using the Docker API
      - --providers.docker=true
      # Enable the Trafik dashboard
      - --api.dashboard=true
      # - --api.insecure=false
      # Set up LetsEncrypt
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.email=${CLOUDFLARE_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      # Set up an insecure listener that redirects all traffic to TLS
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      # Set up the TLS configuration for our websecure listener
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certResolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=${DOMAIN}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${DOMAIN}
      #
      - --entryPoints.smtp.address=:25
      - --entryPoints.smtp-ssl.address=:465
      - --entryPoints.imap-ssl.address=:993
      - --entryPoints.sieve.address=:4190
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_DNS_API_TOKEN}
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=strip
      - traefik.http.middlewares.strip.stripprefix.prefixes=/traefik
      # - traefik.enable=true
      # - traefik.http.services.traefik.loadbalancer.server.port=8080 # required by swarm but not used.
      # - traefik.http.routers.traefik.rule=Host(`dashbord.{DOMAIN}`)
      # - traefik.http.routers.traefik.entrypoints=websecure
      # - traefik.http.routers.traefik.tls.certresolver=letsencrypt
      # - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=traefik-auth
      - traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_PASSWORD_HASH}
    ports:
      - 80:80
      - 443:443
      - 25:25
      - 465:465
      - 993:993
      - 4190:4190
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - .certs:/letsencrypt
    networks:
      - traefik-proxy
    
networks:
  traefik-proxy:
    driver: bridge
    name: traefik-proxy
    driver_opts:
      com.docker.network.enable_ipv6: "false"
      com.docker.network.bridge.name: "docker_traefik"
      #networks:
      #   traefik-proxy:
      #     driver: bridge
      #     name: traefik-proxy 

